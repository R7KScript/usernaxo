--[[
    REDz HUB Library - Enhanced Version
    تم التطوير بواسطة: REDz9999
    النسخة المحسنة بواسطة: [Your Name]
    واجهة مستخدم متقدمة مع تأثيرات بصرية وأداء محسن
--]]

local Configs_HUB = {
    Cor_Hub = Color3.fromRGB(25, 25, 35), -- لون الخلفية الرئيسي
    Cor_Options = Color3.fromRGB(40, 40, 50), -- لون العناصر
    Cor_Stroke = Color3.fromRGB(0, 150, 255), -- لون الحدود
    Cor_Text = Color3.fromRGB(240, 240, 240), -- لون النص الأساسي
    Cor_DarkText = Color3.fromRGB(180, 180, 180), -- لون النص الثانوي
    Corner_Radius = UDim.new(0, 6), -- نصف قطر الزوايا
    Text_Font = Enum.Font.GothamSemibold, -- الخط العام
    Text_Size = 14, -- حجم النص الأساسي
    Animation_Speed = 0.25 -- سرعة التحريك
}

-- الخدمات الأساسية
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- نظام إنشاء العناصر مع تحسينات الأداء
local function Create(instance, parent, props)
    local new = Instance.new(instance)
    new.Parent = parent
    
    if props then
        for prop, value in pairs(props) do
            new[prop] = value
        end
    end
    
    return new
end

-- نظام تحديث الخصائص مع التحقق من الصحة
local function SetProps(instance, props)
    if instance and props then
        for prop, value in pairs(props) do
            if instance[prop] ~= nil then
                instance[prop] = value
            end
        end
    end
    return instance
end

-- نظام الزوايا المحسّن
local function Corner(parent, props)
    local new = Create("UICorner", parent)
    new.CornerRadius = Configs_HUB.Corner_Radius
    
    if props then
        SetProps(new, props)
    end
    
    return new
end

-- نظام الحدود المحسّن
local function Stroke(parent, props)
    local new = Create("UIStroke", parent)
    new.Color = Configs_HUB.Cor_Stroke
    new.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    new.Thickness = 2
    
    if props then
        SetProps(new, props)
    end
    
    return new
end

-- نظام التحريك المتقدم
local function CreateTween(instance, prop, value, time, tweenWait)
    local tweenInfo = TweenInfo.new(
        time or Configs_HUB.Animation_Speed,
        Enum.EasingStyle.Quint,
        Enum.EasingDirection.Out
    )
    
    local tween = TweenService:Create(instance, tweenInfo, {[prop] = value})
    tween:Play()
    
    if tweenWait then
        tween.Completed:Wait()
    end
    
    return tween
end

-- نظام تغيير لون النص عند التفاعل
local function TextSetColor(instance)
    instance.MouseEnter:Connect(function()
        CreateTween(instance, "TextColor3", Color3.fromRGB(0, 180, 255))
    end)
    
    instance.MouseLeave:Connect(function()
        CreateTween(instance, "TextColor3", Configs_HUB.Cor_Text)
    end)
end

-- إنشاء الواجهة الرئيسية مع تحسينات الأمان
local ScreenGui = Create("ScreenGui", CoreGui, {
    Name = "REDz_HUB_Enhanced",
    ResetOnSpawn = false,
    ZIndexBehavior = Enum.ZIndexBehavior.Global
})

-- تنظيف أي نسخ مكررة
local existingGui = CoreGui:FindFirstChild(ScreenGui.Name)
if existingGui and existingGui ~= ScreenGui then
    existingGui:Destroy()
end

-- نظام الإخطارات المحسّن
local NotificationSystem = {
    Container = Create("Frame", ScreenGui, {
        Size = UDim2.new(0, 300, 1, 0),
        Position = UDim2.new(1, 0, 0, 0),
        AnchorPoint = Vector2.new(1, 0),
        BackgroundTransparency = 1,
        Name = "Notifications"
    }),
    
    Padding = Create("UIPadding", nil, {
        PaddingLeft = UDim.new(0, 25),
        PaddingTop = UDim.new(0, 25),
        PaddingBottom = UDim.new(0, 50)
    }),
    
    Layout = Create("UIListLayout", nil, {
        Padding = UDim.new(0, 15),
        VerticalAlignment = Enum.VerticalAlignment.Bottom
    })
}

NotificationSystem.Padding.Parent = NotificationSystem.Container
NotificationSystem.Layout.Parent = NotificationSystem.Container

-- وظيفة إنشاء إخطار متطور
function NotificationSystem:Create(Configs)
    local Title = Configs.Title or "REDz HUB"
    local Text = Configs.Text or "Notification"
    local Duration = Configs.Time or 5
    local Icon = Configs.Icon or "rbxassetid://3926305904" -- أيقونة افتراضية
    
    -- الإطار الرئيسي للإخطار
    local NotificationFrame = Create("Frame", self.Container, {
        Size = UDim2.new(2, 0, 0, 0),
        BackgroundTransparency = 1,
        AutomaticSize = Enum.AutomaticSize.Y,
        Name = "Notification_"..tostring(os.time())
    })
    
    -- محتوى الإخطار
    local ContentFrame = Create("Frame", NotificationFrame, {
        Size = UDim2.new(0, self.Container.Size.X.Offset - 50, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Position = UDim2.new(0, self.Container.Size.X.Offset, 0, 0),
        AutomaticSize = Enum.AutomaticSize.Y
    })
    
    Corner(ContentFrame)
    Stroke(ContentFrame)
    
    -- رأس الإخطار
    local Header = Create("Frame", ContentFrame, {
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundTransparency = 1
    })
    
    -- أيقونة الإخطار
    local IconImage = Create("ImageLabel", Header, {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 10, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        Image = Icon,
        BackgroundTransparency = 1
    })
    
    -- عنوان الإخطار
    local TitleLabel = Create("TextLabel", Header, {
        Size = UDim2.new(1, -40, 1, 0),
        Position = UDim2.new(0, 40, 0, 0),
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency = 1,
        Text = Title,
        TextSize = 16,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextColor3 = Configs_HUB.Cor_Text
    })
    
    -- زر الإغلاق
    local CloseButton = Create("TextButton", Header, {
        Text = "×",
        Font = Enum.Font.GothamBold,
        TextSize = 20,
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(200, 200, 200),
        Position = UDim2.new(1, -5, 0.5, 0),
        AnchorPoint = Vector2.new(1, 0.5),
        Size = UDim2.new(0, 25, 0, 25)
    })
    
    -- نص الإخطار
    local TextLabel = Create("TextLabel", ContentFrame, {
        Size = UDim2.new(1, -30, 0, 0),
        Position = UDim2.new(0, 20, 0, Header.Size.Y.Offset + 10),
        TextSize = 14,
        TextColor3 = Configs_HUB.Cor_DarkText,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextYAlignment = Enum.TextYAlignment.Top,
        AutomaticSize = Enum.AutomaticSize.Y,
        Text = Text,
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency = 1,
        TextWrapped = true
    })
    
    -- شريط التقدم الزمني
    local ProgressBar = Create("Frame", ContentFrame, {
        Size = UDim2.new(1, 0, 0, 2),
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
        Position = UDim2.new(0, 0, 0, Header.Size.Y.Offset),
        BorderSizePixel = 0
    })
    
    Corner(ProgressBar)
    
    -- تأثيرات التحريك
    local function ShowNotification()
        CreateTween(ContentFrame, "Position", UDim2.new(0, -20, 0, 0), 0.3)
        CreateTween(ContentFrame, "Position", UDim2.new(0, 0, 0, 0), 0.2)
        
        -- تحريك شريط التقدم
        CreateTween(ProgressBar, "Size", UDim2.new(0, 0, 0, 2), Duration, true)
    end
    
    local function HideNotification()
        CreateTween(ContentFrame, "Position", UDim2.new(0, -20, 0, 0), 0.1)
        CreateTween(ContentFrame, "Position", UDim2.new(0, self.Container.Size.X.Offset, 0, 0), 0.3)
        task.wait(0.3)
        NotificationFrame:Destroy()
    end
    
    -- تفاعل زر الإغلاق
    CloseButton.MouseButton1Click:Connect(HideNotification)
    
    -- التشغيل التلقائي للإخطار
    task.spawn(function()
        ShowNotification()
        task.wait(Duration)
        if ContentFrame and ContentFrame.Parent then
            HideNotification()
        end
    end)
end

-- نظام النوافذ المحسّن
local WindowSystem = {
    ActiveWindows = {},
    ZIndex = 10
}

function WindowSystem:Create(Configs)
    local WindowConfig = {
        Title = Configs.Title or "REDz HUB",
        Size = Configs.Size or UDim2.new(0, 500, 0, 400),
        Position = Configs.Position or UDim2.new(0.5, 0, 0.5, 0),
        MinSize = Configs.MinSize or UDim2.new(0, 300, 0, 200),
        Resizable = Configs.Resizable or true,
        Closable = Configs.Closable or true,
        Minimizable = Configs.Minimizable or true
    }
    
    -- النافذة الرئيسية
    local Window = Create("Frame", ScreenGui, {
        Size = WindowConfig.Size,
        Position = WindowConfig.Position,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Active = true,
        Draggable = true,
        ZIndex = self.ZIndex
    })
    
    self.ZIndex = self.ZIndex + 1
    Corner(Window)
    Stroke(Window)
    
    -- شريط العنوان
    local TitleBar = Create("Frame", Window, {
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        ZIndex = self.ZIndex
    })
    
    self.ZIndex = self.ZIndex + 1
    Corner(TitleBar, {CornerRadius = UDim.new(0, 6)})
    
    -- عنوان النافذة
    local TitleLabel = Create("TextLabel", TitleBar, {
        Size = UDim2.new(1, -80, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        Text = WindowConfig.Title,
        Font = Configs_HUB.Text_Font,
        TextSize = 16,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        ZIndex = self.ZIndex
    })
    
    self.ZIndex = self.ZIndex + 1
    
    -- أزرار التحكم
    local ControlButtons = Create("Frame", TitleBar, {
        Size = UDim2.new(0, 70, 1, 0),
        Position = UDim2.new(1, -5, 0, 0),
        AnchorPoint = Vector2.new(1, 0),
        BackgroundTransparency = 1,
        ZIndex = self.ZIndex
    })
    
    self.ZIndex = self.ZIndex + 1
    
    -- زر التصغير
    local MinimizeButton = Create("TextButton", ControlButtons, {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        Text = "_",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = Configs_HUB.Cor_Text,
        BackgroundTransparency = 1,
        ZIndex = self.ZIndex
    })
    
    self.ZIndex = self.ZIndex + 1
    
    -- زر التكبير
    local MaximizeButton = Create("TextButton", ControlButtons, {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 25, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        Text = "□",
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        TextColor3 = Configs_HUB.Cor_Text,
        BackgroundTransparency = 1,
        ZIndex = self.ZIndex
    })
    
    self.ZIndex = self.ZIndex + 1
    
    -- زر الإغلاق
    local CloseButton = Create("TextButton", ControlButtons, {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 50, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        Text = "×",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = Color3.fromRGB(255, 80, 80),
        BackgroundTransparency = 1,
        ZIndex = self.ZIndex
    })
    
    self.ZIndex = self.ZIndex + 1
    
    -- منطقة المحتوى
    local ContentArea = Create("Frame", Window, {
        Size = UDim2.new(1, -10, 1, -40),
        Position = UDim2.new(0.5, 0, 1, -5),
        AnchorPoint = Vector2.new(0.5, 1),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        ZIndex = self.ZIndex - 5
    })
    
    Corner(ContentArea)
    Stroke(ContentArea)
    
    -- شريط التمرير
    local ScrollFrame = Create("ScrollingFrame", ContentArea, {
        Size = UDim2.new(1, -10, 1, -10),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        ScrollBarThickness = 5,
        ScrollBarImageColor3 = Configs_HUB.Cor_Stroke,
        CanvasSize = UDim2.new(0, 0, 0, 0),
        AutomaticCanvasSize = Enum.AutomaticSize.Y
    })
    
    local ContentLayout = Create("UIListLayout", ScrollFrame, {
        Padding = UDim.new(0, 5)
    })
    
    -- تفاعلات النافذة
    local isMinimized = false
    local isMaximized = false
    local originalSize = Window.Size
    local originalPosition = Window.Position
    
    -- وظيفة التصغير/الاستعادة
    MinimizeButton.MouseButton1Click:Connect(function()
        if isMinimized then
            -- استعادة النافذة
            Window.Size = originalSize
            ContentArea.Visible = true
            isMinimized = false
            MinimizeButton.Text = "_"
        else
            -- تصغير النافذة
            originalSize = Window.Size
            Window.Size = UDim2.new(Window.Size.X, Window.Size.Y, 0, TitleBar.Size.Y.Offset + 5)
            ContentArea.Visible = false
            isMinimized = true
            MinimizeButton.Text = "+"
        end
    end)
    
    -- وظيفة التكبير/الاستعادة
    MaximizeButton.MouseButton1Click:Connect(function()
        if isMaximized then
            -- استعادة الحجم الأصلي
            Window.Size = originalSize
            Window.Position = originalPosition
            isMaximized = false
            MaximizeButton.Text = "□"
        else
            -- تكبير النافذة
            originalSize = Window.Size
            originalPosition = Window.Position
            Window.Size = UDim2.new(0.9, 0, 0.9, 0)
            Window.Position = UDim2.new(0.5, 0, 0.5, 0)
            isMaximized = true
            MaximizeButton.Text = "❐"
        end
    end)
    
    -- وظيفة إغلاق النافذة
    CloseButton.MouseButton1Click:Connect(function()
        -- تأثير اختفاء النافذة
        CreateTween(Window, "Size", UDim2.new(0, 0, 0, 0), 0.3)
        task.wait(0.3)
        Window:Destroy()
    end)
    
    -- نظام السحب للنافذة
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Window.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            Window.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X,
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- إضافة النافذة إلى القائمة النشطة
    table.insert(self.ActiveWindows, Window)
    
    -- إرجاع واجهة للتحكم بالنافذة
    return {
        Window = Window,
        TitleBar = TitleBar,
        ContentArea = ScrollFrame,
        
        SetTitle = function(self, newTitle)
            TitleLabel.Text = newTitle
        end,
        
        Close = function(self)
            Window:Destroy()
        end,
        
        Minimize = function(self)
            MinimizeButton:Activate()
        end,
        
        Maximize = function(self)
            MaximizeButton:Activate()
        end
    }
end

-- نظام الألسنة (Tabs) المحسّن
function WindowSystem:CreateTabSystem(parent)
    local TabSystem = {
        Tabs = {},
        ActiveTab = nil
    }
    
    -- شريط الألسنة
    local TabBar = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundTransparency = 1
    })
    
    local TabListLayout = Create("UIListLayout", TabBar, {
        FillDirection = Enum.FillDirection.Horizontal,
        Padding = UDim.new(0, 5)
    })
    
    -- منطقة المحتوى
    local ContentFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 1, -35),
        Position = UDim2.new(0, 0, 0, 35),
        BackgroundTransparency = 1
    })
    
    -- وظيفة إنشاء لسان جديد
    function TabSystem:AddTab(tabName)
        local Tab = {
            Name = tabName,
            Content = Create("ScrollingFrame", ContentFrame, {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                ScrollBarThickness = 5,
                ScrollBarImageColor3 = Configs_HUB.Cor_Stroke,
                Visible = false,
                CanvasSize = UDim2.new(0, 0, 0, 0),
                AutomaticCanvasSize = Enum.AutomaticSize.Y
            })
        }
        
        -- زر اللسان
        local TabButton = Create("TextButton", TabBar, {
            Size = UDim2.new(0, 100, 1, 0),
            Text = tabName,
            Font = Configs_HUB.Text_Font,
            TextSize = 14,
            TextColor3 = Configs_HUB.Cor_DarkText,
            BackgroundColor3 = Configs_HUB.Cor_Options,
            AutoButtonColor = false
        })
        
        Corner(TabButton)
        Stroke(TabButton)
        
        -- تفعيل اللسان عند النقر
        TabButton.MouseButton1Click:Connect(function()
            self:SetActiveTab(tabName)
        end)
        
        -- إعداد المحتوى
        local ContentLayout = Create("UIListLayout", Tab.Content, {
            Padding = UDim.new(0, 10)
        })
        
        local ContentPadding = Create("UIPadding", Tab.Content, {
            PaddingLeft = UDim.new(0, 10),
            PaddingRight = UDim.new(0, 10),
            PaddingTop = UDim.new(0, 10),
            PaddingBottom = UDim.new(0, 10)
        })
        
        -- إضافة اللسان إلى النظام
        table.insert(self.Tabs, Tab)
        
        -- إذا كان هذا أول لسان، فعّله تلقائياً
        if #self.Tabs == 1 then
            self:SetActiveTab(tabName)
        end
        
        return Tab.Content
    end
    
    -- وظيفة تعيين اللسان النشط
    function TabSystem:SetActiveTab(tabName)
        for _, tab in ipairs(self.Tabs) do
            if tab.Name == tabName then
                tab.Content.Visible = true
                self.ActiveTab = tab
            else
                tab.Content.Visible = false
            end
        end
    end
    
    return TabSystem
end

-- نظام العناصر المحسّن
local ElementSystem = {}

-- زر محسّن مع أيقونة
function ElementSystem:CreateButton(parent, config)
    local Button = Create("TextButton", parent, {
        Size = config.Size or UDim2.new(1, 0, 0, 30),
        Text = "",
        AutoButtonColor = false,
        BackgroundColor3 = Configs_HUB.Cor_Options
    })
    
    Corner(Button)
    Stroke(Button)
    
    -- أيقونة الزر
    if config.Icon then
        local Icon = Create("ImageLabel", Button, {
            Size = UDim2.new(0, 20, 0, 20),
            Position = UDim2.new(0, 5, 0.5, 0),
            AnchorPoint = Vector2.new(0, 0.5),
            Image = config.Icon,
            BackgroundTransparency = 1,
            ImageColor3 = Configs_HUB.Cor_Stroke
        })
    end
    
    -- نص الزر
    local Label = Create("TextLabel", Button, {
        Size = UDim2.new(1, -30, 1, 0),
        Position = UDim2.new(0, 30, 0, 0),
        Text = config.Text or "Button",
        Font = Configs_HUB.Text_Font,
        TextSize = Configs_HUB.Text_Size,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1
    })
    
    -- تأثيرات التفاعل
    Button.MouseEnter:Connect(function()
        CreateTween(Button, "BackgroundColor3", Color3.fromRGB(
            Configs_HUB.Cor_Options.R * 255 + 10,
            Configs_HUB.Cor_Options.G * 255 + 10,
            Configs_HUB.Cor_Options.B * 255 + 10
        ))
    end)
    
    Button.MouseLeave:Connect(function()
        CreateTween(Button, "BackgroundColor3", Configs_HUB.Cor_Options)
    end)
    
    Button.MouseButton1Down:Connect(function()
        CreateTween(Button, "Position", Button.Position + UDim2.new(0, 0, 0, 2), 0.1)
    end)
    
    Button.MouseButton1Up:Connect(function()
        CreateTween(Button, "Position", Button.Position - UDim2.new(0, 0, 0, 2), 0.1)
        if config.Callback then
            config.Callback()
        end
    end)
    
    return Button
end

-- مفتاح تبديل محسّن
function ElementSystem:CreateToggle(parent, config)
    local Toggle = Create("TextButton", parent, {
        Size = config.Size or UDim2.new(1, 0, 0, 30),
        Text = "",
        AutoButtonColor = false,
        BackgroundColor3 = Configs_HUB.Cor_Options
    })
    
    Corner(Toggle)
    Stroke(Toggle)
    
    -- نص المفتاح
    local Label = Create("TextLabel", Toggle, {
        Size = UDim2.new(1, -60, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        Text = config.Text or "Toggle",
        Font = Configs_HUB.Text_Font,
        TextSize = Configs_HUB.Text_Size,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1
    })
    
    -- عنصر التبديل
    local ToggleFrame = Create("Frame", Toggle, {
        Size = UDim2.new(0, 40, 0, 20),
        Position = UDim2.new(1, -15, 0.5, 0),
        AnchorPoint = Vector2.new(1, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Hub
    })
    
    Corner(ToggleFrame, {CornerRadius = UDim.new(1, 0)})
    Stroke(ToggleFrame)
    
    local ToggleCircle = Create("Frame", ToggleFrame, {
        Size = UDim2.new(0, 16, 0, 16),
        Position = UDim2.new(0, 2, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
    })
    
    Corner(ToggleCircle, {CornerRadius = UDim.new(1, 0)})
    
    -- حالة المفتاح
    local isToggled = config.Default or false
    
    -- تحديث المظهر حسب الحالة
    local function UpdateToggle()
        if isToggled then
            CreateTween(ToggleCircle, "Position", UDim2.new(1, -18, 0.5, 0))
            CreateTween(ToggleCircle, "BackgroundColor3", Color3.fromRGB(0, 200, 0))
            CreateTween(ToggleFrame, "BackgroundColor3", Color3.fromRGB(0, 80, 0))
        else
            CreateTween(ToggleCircle, "Position", UDim2.new(0, 2, 0.5, 0))
            CreateTween(ToggleCircle, "BackgroundColor3", Configs_HUB.Cor_Stroke)
            CreateTween(ToggleFrame, "BackgroundColor3", Configs_HUB.Cor_Hub)
        end
    end
    
    -- تفعيل/إلغاء عند النقر
    Toggle.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        UpdateToggle()
        if config.Callback then
            config.Callback(isToggled)
        end
    end)
    
    -- التهيئة الأولية
    UpdateToggle()
    
    return {
        Toggle = Toggle,
        SetState = function(self, state)
            isToggled = state
            UpdateToggle()
        end,
        GetState = function(self)
            return isToggled
        end
    }
end

-- شريط التمرير المحسّن
function ElementSystem:CreateSlider(parent, config)
    local Slider = Create("Frame", parent, {
        Size = config.Size or UDim2.new(1, 0, 0, 50),
        BackgroundTransparency = 1
    })
    
    -- عنوان الشريط
    local Title = Create("TextLabel", Slider, {
        Size = UDim2.new(1, 0, 0, 20),
        Text = config.Text or "Slider",
        Font = Configs_HUB.Text_Font,
        TextSize = Configs_HUB.Text_Size,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1
    })
    
    -- قيمة الشريط
    local ValueLabel = Create("TextLabel", Slider, {
        Size = UDim2.new(0, 50, 0, 20),
        Position = UDim2.new(1, 0, 0, 0),
        AnchorPoint = Vector2.new(1, 0),
        Text = tostring(config.Default or config.Min or 0),
        Font = Configs_HUB.Text_Font,
        TextSize = Configs_HUB.Text_Size,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = Enum.TextXAlignment.Right,
        BackgroundTransparency = 1
    })
    
    -- مسار الشريط
    local Track = Create("Frame", Slider, {
        Size = UDim2.new(1, 0, 0, 5),
        Position = UDim2.new(0, 0, 1, -10),
        AnchorPoint = Vector2.new(0, 1),
        BackgroundColor3 = Configs_HUB.Cor_Hub
    })
    
    Corner(Track)
    Stroke(Track)
    
    -- شريط التعبئة
    local Fill = Create("Frame", Track, {
        Size = UDim2.new(0, 0, 1, 0),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
    })
    
    Corner(Fill)
    
    -- مقبض الشريط
    local Thumb = Create("Frame", Track, {
        Size = UDim2.new(0, 10, 0, 10),
        Position = UDim2.new(0, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Text
    })
    
    Corner(Thumb, {CornerRadius = UDim.new(1, 0)})
    Stroke(Thumb)
    
    -- قيم الشريط
    local min = config.Min or 0
    local max = config.Max or 100
    local step = config.Step or 1
    local currentValue = config.Default or min
    
    -- تحديث الشريط حسب القيمة
    local function UpdateSlider(value)
        currentValue = math.clamp(value, min, max)
        local percentage = (currentValue - min) / (max - min)
        
        Fill.Size = UDim2.new(percentage, 0, 1, 0)
        Thumb.Position = UDim2.new(percentage, 0, 0.5, 0)
        ValueLabel.Text = tostring(currentValue)
        
        if config.Callback then
            config.Callback(currentValue)
        end
    end
    
    -- تفاعلات السحب
    local isDragging = false
    
    local function UpdateFromMouseInput()
        local mouseX = UserInputService:GetMouseLocation().X
        local absolutePosition = Track.AbsolutePosition.X
        local absoluteSize = Track.AbsoluteSize.X
        
        local relativeX = math.clamp(mouseX - absolutePosition, 0, absoluteSize)
        local percentage = relativeX / absoluteSize
        local newValue = min + (max - min) * percentage
        
        -- تطبيق الخطوة
        if step > 0 then
            newValue = math.floor(newValue / step + 0.5) * step
            percentage = (newValue - min) / (max - min)
        end
        
        UpdateSlider(newValue)
    end
    
    Thumb.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
        end
    end)
    
    Thumb.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    Track.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            UpdateFromMouseInput()
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            UpdateFromMouseInput()
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    -- التهيئة الأولية
    UpdateSlider(currentValue)
    
    return {
        Slider = Slider,
        SetValue = function(self, value)
            UpdateSlider(value)
        end,
        GetValue = function(self)
            return currentValue
        end
    }
end

-- مربع النص المحسّن
function ElementSystem:CreateTextBox(parent, config)
    local TextBox = Create("Frame", parent, {
        Size = config.Size or UDim2.new(1, 0, 0, 40),
        BackgroundTransparency = 1
    })
    
    -- عنوان مربع النص
    if config.Text then
        local Title = Create("TextLabel", TextBox, {
            Size = UDim2.new(1, 0, 0, 20),
            Text = config.Text,
            Font = Configs_HUB.Text_Font,
            TextSize = Configs_HUB.Text_Size,
            TextColor3 = Configs_HUB.Cor_Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            BackgroundTransparency = 1
        })
    end
